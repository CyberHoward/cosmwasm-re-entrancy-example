{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "QueryMsg",
  "oneOf": [
    {
      "description": "Retrieves the configuration of the contract in a [`Config`] response.",
      "type": "object",
      "required": [
        "config"
      ],
      "properties": {
        "config": {
          "type": "object"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Retrieves the share of the assets stored in the vault that a given `amount` of lp tokens is entitled to in a [`Uint128`] response.",
      "type": "object",
      "required": [
        "share"
      ],
      "properties": {
        "share": {
          "type": "object",
          "required": [
            "amount"
          ],
          "properties": {
            "amount": {
              "$ref": "#/definitions/Uint128"
            }
          }
        }
      },
      "additionalProperties": false
    },
    {
      "description": "Retrieves the protocol fees that have been collected. If `all_time` is `true`, will return the all time collected fees.",
      "type": "object",
      "required": [
        "protocol_fees"
      ],
      "properties": {
        "protocol_fees": {
          "type": "object",
          "required": [
            "all_time"
          ],
          "properties": {
            "all_time": {
              "type": "boolean"
            }
          }
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
